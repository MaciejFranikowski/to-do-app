{"version":3,"sources":["components/Box.js","components/New.js","firebase.js","components/Item.js","components/ToDoList.js","components/UserComponents/Login.js","DummyContext.js","components/UserComponents/Messager.js","components/UserComponents/Register.js","components/Main.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Box","props","onChange","onKeyDown","text","name","type","value","React","Component","firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","addPost","user","postData","a","collection","add","owner","uid","ownerName","displayName","dateCreated","FieldValue","serverTimestamp","Item","split","width","height","src","ToDoList","toDoList","map","it","onClick","adder","Login","useState","email","setEmail","password","setPassword","redirect","setRedirect","to","className","placeholder","e","target","signInWithEmailAndPassword","then","loggedUser","console","log","catch","error","MyContext","createContext","message","setMessage","docs","Messager","useContext","DummyContext","currentUser","get","querySnapshot","forEach","doc","push","data","toString","Register","setDisplayname","htmlFor","id","createUserWithEmailAndPassword","updateProfile","Main","state","setState","pop","element","concat","path","exact","this","Header","setUser","useEffect","unsubscribe","onAuthStateChanged","u","href","signOut","App","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3556c47c.chunk.js","sourcesContent":["const Box = (props) => {\n    const { onChange, onKeyDown, text } = props\n    return (\n        <input name = \"newItemText\"\n        type = \"text\"\n        value = {text}\n        onChange = {onChange}\n        onKeyDown = {onKeyDown}\n        />\n    );\n}\n\nexport default Box;","import React from 'react'\nimport Box from './Box'\n\nclass New extends React.Component {\n    state = {\n        newItemText: \"\",\n        newDescriptionText: \"\"\n    }\n\n    errorText = \"This value is incorrect\"\n\n    handleInputNameChange = (event) => {\n        this.setState({\n            newItemText: event.target.value\n        })\n    }\n\n    handleInputDescriptionChange = (event) => {\n        this.setState({\n            newDescriptionText: event.target.value\n        })\n    }\n\n    handleKey = (event) => {\n        if (event.code === \"Enter\"){\n            this.props.adder(this.state.newItemText, \n                            this.state.newDescriptionText)\n            this.setState({\n                newItemText : \"\",\n                newDescriptionText : \"\",\n            })\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <span className = \"boxText\">Name:</span>\n                <Box\n                    text = {this.state.newItemText}\n                    onChange ={this.handleInputNameChange}\n                    onKeyDown = {this.handleKey}\n                />\n            \n                <span className = \"boxText\">Description:</span>\n                <Box\n                    text = {this.state.newDescriptionText}\n                    onChange ={this.handleInputDescriptionChange}\n                    onKeyDown = {this.handleKey}\n                />\n                \n                {this.state.displayError && <h1 style={{color : \"red\"}} className=\"abc\">{this.errorText}</h1>}\n                \n            </React.Fragment>\n        );\n    }\n}\n\nexport default New;","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCFzCtHpkIqdkoctceHJA3QjFo2gVyp7Nc\",\n    authDomain: \"to-do-app-2c2aa.firebaseapp.com\",\n    projectId: \"to-do-app-2c2aa\",\n    storageBucket: \"to-do-app-2c2aa.appspot.com\",\n    messagingSenderId: \"882134354010\",\n    appId: \"1:882134354010:web:ea560bae821a3866a8f063\",\n    measurementId: \"G-F004E0LLPD\"\n  };\n\n  if (!firebase.apps.length){\n      firebase.initializeApp(firebaseConfig);\n  } else {\n      firebase.app();\n  }\n\n  export const auth = firebase.auth();\n\n  export const firestore = firebase.firestore();\n\n\nexport const addPost = async(user, postData) => {\n    firestore.collection(\"posts\").add({\n        owner: user.uid,\n        ownerName: user.displayName,\n        dateCreated: firebase.firestore.FieldValue.serverTimestamp(),\n        text: postData\n    })\n}\n\nexport const getAllPosts = () => {\n    return firestore.collection(\"posts\").get();\n}","\nimport {auth } from \"../firebase\";\n\nconst Item = (props) => {\n    const text = props.text.split('/')\n    return(\n    <li>\n        <img width=\"40\" height=\"40\" src=\"https://icon-library.com/images/default-profile-icon/default-profile-icon-24.jpg\"></img>\n        Name: \n        {\"  \" + text[0]}\n        <br/>\n        Description: \n        {\"  \" + text[1]}\n    </li>)\n}\n\nexport default Item;","import React from 'react';\nimport Item from './Item'\n\n\nconst ToDoList = (props) => {\n\n    \n    const toDoList = props.toDoList.map(it => (\n        <Item key={it} text={it}/>\n    ))\n\n\n    return (\n        <div>\n            <ul>\n               {toDoList}\n            </ul>\n            <button onClick={props.adder}>Update posts</button>\n        </div>\n            \n    );\n    \n}\n\nexport default ToDoList;","import { auth } from \"../../firebase\";\nimport { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst Login = () => {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [redirect, setRedirect] = useState(false);\n\n    const login = () => {\n\n        auth.signInWithEmailAndPassword(email, password)\n        .then(loggedUser => {\n        setRedirect(true);\n        console.log(\"zalogowano\");\n    })\n        .catch(error => {console.log(error);})\n    }\n\n    if(redirect)\n        return <Redirect to=\"/\"></Redirect>\n\n    return (\n            <div>\n                <input\n                        className = \"form-input\"\n                        placeholder = \"Email\"\n                        value = {email}\n                        onChange={e => setEmail(e.target.value)}\n                />\n                <input\n                        className = \"form-input\"\n                        placeholder = \"Hasło\"\n                        type = \"password\"\n                        value = {password}\n                        onChange={e => setPassword(e.target.value)}\n                />\n                <button onClick={login}>Login</button>\n            \n            </div>\n        \n    )\n}\n\nexport default Login;","import { createContext } from 'react';\n\nconst MyContext = createContext({\n    message: \"\",\n    setMessage: () => {}\n});\n\nexport default MyContext;","import { useContext } from 'react';\nimport DummyContext from '../../DummyContext';\nimport {auth, addPost, getAllPosts } from \"../../firebase\";\nimport Main from \"../Main\"\n\nvar docs = [];\nconst Messager = () => {\n    const {message, setMessage} = useContext(DummyContext);\n\n    const add = () => {\n        addPost(auth.currentUser, message);\n    }\n\n    const getPosts = () => {\n        docs = []\n        getAllPosts().then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                // doc.data() is never undefined for query doc snapshots\n                docs.push(doc.data().ownerName.toString()+\"/\"+doc.data().text.toString())\n            });\n            console.log(docs)\n        });\n    }\n    return (\n        <div className=\"form\">\n            <input \n            className=\"input2\"\n            value={message}\n            onChange={e => setMessage(e.target.value)}\n            />\n            <button onClick={add}>Dodaj post</button>\n            <button onClick={getPosts}>Pobierz posty</button>\n        </div>\n    )\n}\nexport default Messager;\nexport {docs};","import {useState} from 'react';\nimport {auth} from '../../firebase';\nimport {Redirect} from 'react-router-dom';\n\nconst Register = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [displayName, setDisplayname] = useState(\"\");\n    const [redirect, setRedirect] = useState(false);\n\n    const createUserWithEmailAndPasswordHandler = () => {\n        auth.createUserWithEmailAndPassword(email, password)\n        .then(() => {\n            auth.signInWithEmailAndPassword(email,password)\n            .then(loggedUser => {\n            loggedUser.user.updateProfile({\n                displayName: displayName,\n            })\n            .catch(error => {\n                console.log(error);\n            })\n            setRedirect(true);\n        })\n        })\n        .catch(error => {console.log(error);})\n    }\n\n    if (redirect)\n        return <Redirect to='/'/>\n    \n    return (\n        <div className=\"form\">\n            <label htmlFor=\"displayName\">Nazwa użytkownika</label>\n            <div>\n                <input\n                    id=\"displayName\"\n                    name=\"username\"\n                    className=\"input2\"\n                    value={displayName}\n                    placeholder=\"Nazwa użytkownika\"\n                    onChange={e => setDisplayname(e.target.value)}\n                />\n            </div>\n            <label htmlFor=\"email\">Email</label>\n            <div>\n                <input\n                    id=\"email\"\n                    type=\"email\"\n                    name=\"email\"\n                    className=\"input2\"\n                    value={email}\n                    placeholder=\"Email\"\n                    onChange={e => setEmail(e.target.value)}\n                />\n            </div>\n            <label htmlFor=\"password\">Haslo</label>\n            <div>\n                <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    className=\"input2\"\n                    value={password}\n                    placeholder=\"Hasło\"\n                    onChange={e => setPassword(e.target.value)}\n                />\n            </div>\n            <button\n                onClick={createUserWithEmailAndPasswordHandler}\n            >Utwórz konto\n            </button>\n        </div>\n    )\n\n\n}\nexport default Register;","import React from 'react';\nimport New from './New';\nimport ToDoList from './ToDoList';\nimport Login from \"./UserComponents/Login\";\nimport Messager from \"./UserComponents/Messager\";\nimport Register from \"./UserComponents/Register\";\nimport { Route, Switch } from 'react-router-dom';\nimport { auth, getAllPosts } from \"../firebase\";\nimport {docs} from \"./UserComponents/Messager\";\n\nclass Main extends React.Component {\n    state = {\n        toDoList: [],\n    }\n    /*\n    adder = (newDescriptionText, newItemText) => {\n        this.setState({\n                toDoList: this.state.toDoList.concat(newItemText + \"/\" + \n                newDescriptionText)\n                });\n    }*/\n\n    adder = () => {\n      console.log(\"updating the list\")\n      while(this.state.toDoList.length > 0) {\n        this.setState({\n          toDoList: this.state.toDoList.pop()\n       }); \n      }\n\n      if(auth.currentUser!= null){\n      docs.forEach(element => {\n        this.setState({\n          toDoList: this.state.toDoList.concat(docs)\n          }); \n      }); \n      } \n    }\n    \n    \n    render() {\n        // console.log(this.state.listOfToDos);\n        return (\n    \n          <Switch>\n            <Route path=\"/\" exact>\n              <section><ToDoList toDoList={this.state.toDoList} adder={this.adder}/></section>\n            </Route>\n            <Route path=\"/login\">  \n              <section><Login/></section>\n            </Route>\n            <Route path=\"/register\">  \n              <section><Register/></section>\n            </Route>\n            <Route path=\"/messager\">  \n              <section><Messager/></section>\n            </Route>\n            <Route>\n              <section><h1>Error 404 - not found</h1></section>\n            </Route>\n          </Switch>\n        );\n      }\n}\n\nexport default Main;","import {BrowserRouter as Router, NavLink} from 'react-router-dom';\nimport { auth } from '../firebase';\nimport { useState, useEffect} from 'react';\nimport Main from \"./Main\";\n\nconst Header = () => {\n    const [user, setUser] = useState(null);\n\n    useEffect(() =>{\n        const unsubscribe = auth.onAuthStateChanged((u) => {\n            if(u){\n                setUser(u);\n            } else {\n                console.log(\"User no logged\");\n            }\n        });\n        return () => unsubscribe();\n    }, []);\n\n    const logout = () =>{\n        auth.signOut();\n    }\n\n    console.log(auth.currentUser);\n\n    if(user){ \n        return(\n            <div className=\"topnav\">\n              <NavLink  to=\"/\" exact onClick={Main.adder}>Posts</NavLink>\n              <NavLink to=\"/messager\">{user.displayName.toString()}</NavLink>\n              <a href=\"/\" className=\"nav-button\" onClick={logout}>Wyloguj</a>\n          </div>\n        )\n    }\n    return(\n        <div className=\"topnav\">\n              <NavLink to=\"/\" exact>User List</NavLink>\n              <NavLink to=\"/login\">Login</NavLink>\n              <NavLink to=\"/register\">Register</NavLink>\n              <NavLink to=\"/messager\">Messager</NavLink>\n          </div>\n    )\n}\nexport default Header;","import './App.css';\n\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport Main from './components/Main';\nimport Header from './components/Header';\nimport DummyContext from \"./DummyContext\";\n\nimport {useState} from 'react';\n\nfunction App() {\n\n  const [message, setMessage] = useState(\"empty\");\n\n  return (\n    <Router>\n      <DummyContext.Provider value = {{message, setMessage}}>\n        <h2>Developer Tinder</h2>\n        <main>\n\n          <Header/>\n          <br></br>\n          <Main />\n        </main>\n      </DummyContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}